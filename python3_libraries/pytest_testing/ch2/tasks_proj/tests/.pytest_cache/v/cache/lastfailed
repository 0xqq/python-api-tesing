{
  "func/test_add.py::test_add_returns_valid_id": true,
  "func/test_add_variety.py::TestAdd": true,
  "func/test_add_variety.py::test_add_1": true,
  "func/test_add_variety.py::test_add_2[task0]": true,
  "func/test_add_variety.py::test_add_2[task1]": true,
  "func/test_add_variety.py::test_add_2[task2]": true,
  "func/test_add_variety.py::test_add_2[task3]": true,
  "func/test_add_variety.py::test_add_3[breathe-BRIAN-True]": true,
  "func/test_add_variety.py::test_add_3[eat eggs-BrIaN-False]": true,
  "func/test_add_variety.py::test_add_3[sleep-None-False]": true,
  "func/test_add_variety.py::test_add_3[wake-brian-False]": true,
  "func/test_add_variety.py::test_add_4[task0]": true,
  "func/test_add_variety.py::test_add_4[task1]": true,
  "func/test_add_variety.py::test_add_4[task2]": true,
  "func/test_add_variety.py::test_add_4[task3]": true,
  "func/test_add_variety.py::test_add_4[task4]": true,
  "func/test_add_variety.py::test_add_5[Task(breathe,BRIAN,True)]": true,
  "func/test_add_variety.py::test_add_5[Task(exercise,BrIaN,False)]": true,
  "func/test_add_variety.py::test_add_5[Task(sleep,None,True)]": true,
  "func/test_add_variety.py::test_add_5[Task(wake,brian,False)0]": true,
  "func/test_add_variety.py::test_add_5[Task(wake,brian,False)1]": true,
  "func/test_add_variety.py::test_add_6[just summary]": true,
  "func/test_add_variety.py::test_add_6[summary/owner/done]": true,
  "func/test_add_variety.py::test_add_6[summary/owner]": true,
  "func/test_api_exceptions.py::TestUpdate": true,
  "func/test_api_exceptions.py::test_add_raises": true,
  "func/test_api_exceptions.py::test_delete_raises": true,
  "func/test_api_exceptions.py::test_start_tasks_db_raises": true,
  "func/test_unique_id_1.py::test_unique_id": true,
  "func/test_unique_id_2.py::test_unique_id_1": true,
  "func/test_unique_id_2.py::test_unique_id_2": true,
  "func/test_unique_id_3.py::test_unique_id_1": true,
  "func/test_unique_id_3.py::test_unique_id_2": true,
  "func/test_unique_id_4.py::test_unique_id_1": true,
  "func/test_unique_id_4.py::test_unique_id_2": true,
  "func/test_unique_id_4.py::test_unique_id_is_a_duck": true,
  "func/test_unique_id_4.py::test_unique_id_not_a_duck": true,
  "unit/test_task_fail.py::test_dict_equality": true,
  "unit/test_task_fail.py::test_task_equality": true
}